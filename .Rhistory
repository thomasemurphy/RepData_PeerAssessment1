x <- 1:20
n <-12
above(x,n)
above10(x,n)
above10(x)
above <- function(x, n=10) {
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmeans(airquality)
columnmean(airquality)
columnmean <- function(y, removeNA=TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i] <- mean(y[,i], na.rm=removeNA)
}
means
}
columnmean(airquality)
cube <- function(x,n){
x^3
}
cube(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<- 10
f(3)
library(xlsx)
library(swirl)
swirl()
swirl::install_course("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
low
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Countries in Each Region")
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25 ~ region, data=pollution, col="red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution, region=="east")
head(east)
hist(east$pm25, col="green")
hist(subset(pollution, region=="west")$pm25, col="blue")
hist(subset(pollution, region=="west")$pm25, col="green")
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
abline(12, lwd=2, lty=2)
plot(pollution$latitude, pollution$ppm, col=pollution$region)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow=(c(1,2), mar=c(5,4,2,1)))
par(mfrow=c(1,2), mar=c(5,4,2,1)))
par(mfrow=c(1,2), mar=c(5,4,2,1))
west <- subset(pollution, region=="west")
plot(west$latitude, west$pm25, main="West")
plot(west$latitude, west$pm25, main="East")
plot(east$latitude, east$pm25, main="East")
setwd("Documents/coursera data science/exploratory data analysis/")
dir()
setwd("week_1/")
dir()
load_data <- function(filename="household_power_consumption.txt"){
all_data <- read.table(filename, header=TRUE, sep=";")
all_data[,"dateTime"] <- as.POSIXct(paste(all_data$Date, all_data$Time), format="%Y-%m-%d %H:%M:%S")
feb_data <- subset(all_data, dateTime >= "2007-02-01" & date < "2007-02-02")
feb_data
}
feb_data <- load_data()
as.POSIXct("2007-02-01")
load_data <- function(filename="household_power_consumption.txt"){
all_data <- read.table(filename, header=TRUE, sep=";")
all_data[,"dateTime"] <- as.POSIXct(paste(all_data$Date, all_data$Time), format="%Y-%m-%d %H:%M:%S")
feb_data <- subset(all_data, dateTime >= as.POSIXct("2007-02-01") & date <= as.POSIXct("2007-02-02"))
feb_data
}
feb_data <- load_data()
load_data <- function(filename="household_power_consumption.txt"){
all_data <- read.table(filename, header=TRUE, sep=";")
all_data[,"dateTime"] <- as.POSIXct(paste(all_data$Date, all_data$Time), format="%Y-%m-%d %H:%M:%S")
feb_data <- subset(all_data, dateTime >= as.POSIXct("2007-02-01") & dateTime <= as.POSIXct("2007-02-02"))
feb_data
}
feb_data <- load_data()
all_data <- read.table("household_power_consumption.txt", header=TRUE, sep=";")
head(all_data)
tail(all_data)
all_data[,"dateTime"] <- as.POSIXct(paste(all_data$Date, all_data$Time), format="%Y-%m-%d %H:%M:%S")
tail(all_data)
head(all_data)
all_data[,"dateTime"] <- as.POSIXct(paste(all_data$Date, all_data$Time), format="%d/%m/%Y %H:%M:%S")
head(all_data)
feb_data <- subset(all_data, dateTime >= as.POSIXct("2007-02-01") & dateTime <= as.POSIXct("2007-02-02"))
head(feb_data,10)
tail(feb_data,10)
feb_data <- subset(all_data, dateTime >= as.POSIXct("2007-02-01", format="%Y-%m-%d") & dateTime <= as.POSIXct("2007-02-02", format="%Y-%m-%d"))
tail(feb_data,10)
feb_data <- subset(all_data, dateTime >= as.POSIXct("2007-02-01", format="%Y-%m-%d") & dateTime < as.POSIXct("2007-02-03", format="%Y-%m-%d"))
tail(feb_data,10)
load_data <- function(filename="household_power_consumption.txt"){
all_data <- read.table(filename, header=TRUE, sep=";")
all_data[,"dateTime"] <- as.POSIXct(paste(all_data$Date, all_data$Time), format="%d/%m/%Y %H:%M:%S")
feb_data <- subset(all_data, dateTime >= as.POSIXct("2007-02-01", format="%Y-%m-%d") & dateTime < as.POSIXct("2007-02-03", format="%Y-%m-%d"))
feb_data
}
feb_data <- load_data()
rm(all_data)
names(feb_data)
hist(feb_data$Global_active_power)
hist(as.numeric(feb_data$Global_active_power))
?hist
?hist
hist(as.numeric(feb_data$Global_active_power), breaks=seq(0,6,0.5))
hist(as.numeric(feb_data$Global_active_power), breaks=seq(0,6000,500))
head(feb_data$Global_active_power)
head(as.numeric(feb_data$Global_active_power))
feb_data$Global_active_power[1]
as.numeric(feb_data$Global_active_power[1])
as.numeric(as.character(feb_data$Global_active_power[1]))
feb_data$Global_active_power <- as.numeric(as.character(feb_data$Global_active_power))
hist(feb_data$Global_active_power, breaks=seq(0,6,0.5))
feb_data <- load_data()
feb_data$Global_active_power <- as.numeric(as.character(feb_data$Global_active_power))
hist(feb_data$Global_active_power, breaks=seq(0,6,0.5))
head(feb_data)
mean(feb_data$Global_active_power)
hist(feb_data$Global_active_power, breaks=seq(0.5,6,0.5))
hist(feb_data$Global_active_power, breaks=seq(from=0.5,to=6,by=0.5))
hist(feb_data$Global_active_power)
?hist
hist(feb_data$Global_active_power, col="red")
?hist
hist(feb_data$Global_active_power, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
png(file="plot1.png")
hist(feb_data$Global_active_power, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.off()
load_data <- function(filename="household_power_consumption.txt"){
all_data <- read.table(filename, header=TRUE, sep=";")
all_data[,"dateTime"] <- as.POSIXct(paste(all_data$Date, all_data$Time), format="%d/%m/%Y %H:%M:%S")
feb_data <- subset(all_data, dateTime >= as.POSIXct("2007-02-01", format="%Y-%m-%d") & dateTime < as.POSIXct("2007-02-03", format="%Y-%m-%d"))
feb_data
}
feb_data <- load_data()
feb_data$Global_active_power <- as.numeric(as.character(feb_data$Global_active_power))
png(filename = "Rplot%03d.png", width = 480, height = 480)
hist(feb_data$Global_active_power, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.off()
hist(feb_data$Global_active_power, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
xlab <- "stuff"
xlab
plot(feb_data$Global_active_power)
plot(feb_data$dateTime, feb_data$Global_active_power)
?plot
plot(feb_data$dateTime, feb_data$Global_active_power, type="l")
plot(feb_data$dateTime, feb_data$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
getwd()
setwd("ExData_Plotting1/")
dir()
png("plot2.png")
plot(feb_data$dateTime, feb_data$Global_active_power, type="l",
xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
dir()
names(feb_data)
plot(feb_data$dateTime, feb_data$Sub_metering_3, type="l",
xlab="", ylab="Energy sub metering")
main("test")
title("test")
xlab("hey")
?plot
title(xlab="hey")
plot(feb_data$dateTime, feb_data$Sub_metering_3, type="l",
xlab="", ylab="Energy sub metering")
plot(feb_data$dateTime, feb_data$Sub_metering_3, type="l",
xlab="", ylab="Energy sub metering", type="n")
plot(feb_data$dateTime, feb_data$Sub_metering_3, type="n")
title(ylab="Energy sub metering")
plot(feb_data$dateTime, feb_data$Sub_metering_3, ylab="Energy sub metering", xlab="", type="n")
plot(feb_data$dateTime, feb_data$Sub_metering_3, type="l",
xlab="", ylab="Global Active Power (kilowatts)")
lines(feb_data$dateTime, feb_data$Sub_metering_2, col="red")
plot(feb_data$dateTime, feb_data$Sub_metering_3, type="l",
xlab="", ylab="Global Active Power (kilowatts)")
lines(feb_data$dateTime, feb_data$Sub_metering_2, col="red")
lines(feb_data$dateTime, feb_data$Sub_metering_3, col="blue")
plot(feb_data$dateTime, feb_data$Sub_metering_1, type="l",
xlab="", ylab="Global Active Power (kilowatts)")
lines(feb_data$dateTime, feb_data$Sub_metering_2, col="red")
lines(feb_data$dateTime, feb_data$Sub_metering_3, col="blue")
plot(feb_data$dateTime, feb_data$Sub_metering_1, type="l",
xlab="", ylab="Energy sub metering")
lines(feb_data$dateTime, feb_data$Sub_metering_2, col="red")
lines(feb_data$dateTime, feb_data$Sub_metering_3, col="blue")
names(feb_data)
max(feb_data$Sub_metering_2)
feb_data$Sub_metering_1 <- as.numeric(as.character(feb_data$Sub_metering_1))
feb_data$Sub_metering_2 <- as.numeric(as.character(feb_data$Sub_metering_2))
feb_data$Sub_metering_3 <- as.numeric(as.character(feb_data$Sub_metering_3))
plot(feb_data$dateTime, feb_data$Sub_metering_1, type="l",
xlab="", ylab="Energy sub metering")
lines(feb_data$dateTime, feb_data$Sub_metering_2, col="red")
lines(feb_data$dateTime, feb_data$Sub_metering_3, col="blue")
png("plot3.png")
plot(feb_data$dateTime, feb_data$Sub_metering_1, type="l",
xlab="", ylab="Energy sub metering")
lines(feb_data$dateTime, feb_data$Sub_metering_2, col="red")
lines(feb_data$dateTime, feb_data$Sub_metering_3, col="blue")
dev.off()
?legend
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","red","blue"), lty="solid")
png("plot3.png")
plot(feb_data$dateTime, feb_data$Sub_metering_1, type="l",
xlab="", ylab="Energy sub metering")
lines(feb_data$dateTime, feb_data$Sub_metering_2, col="red")
lines(feb_data$dateTime, feb_data$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","red","blue"), lty="solid")
dev.off()
par(mfcol=c(2,2))
# top left
plot(feb_data$dateTime, feb_data$Global_active_power, type="l",
xlab="", ylab="Global Active Power (kilowatts)")
# bottom left
plot(feb_data$dateTime, feb_data$Sub_metering_1, type="l",
xlab="", ylab="Energy sub metering")
lines(feb_data$dateTime, feb_data$Sub_metering_2, col="red")
lines(feb_data$dateTime, feb_data$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","red","blue"), lty="solid")
# top right
plot(feb_data$dateTime, feb_data$Voltage, type="l", xlab="datetime", ylab="Voltage")
# bottom right
plot(feb_data$dateTime, feb_data$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
feb_data$Global_active_power <- as.numeric(as.character(feb_data$Global_active_power))
feb_data$Sub_metering_1 <- as.numeric(as.character(feb_data$Sub_metering_1))
feb_data$Sub_metering_2 <- as.numeric(as.character(feb_data$Sub_metering_2))
feb_data$Sub_metering_3 <- as.numeric(as.character(feb_data$Sub_metering_3))
feb_data$Voltage <- as.numeric(as.character(feb_data$Voltage))
feb_data$Global_reactive_power <- as.numeric(as.character(feb_data$Global_reactive_power))
par(mfcol=c(2,2))
# top left
plot(feb_data$dateTime, feb_data$Global_active_power, type="l",
xlab="", ylab="Global Active Power (kilowatts)")
# bottom left
plot(feb_data$dateTime, feb_data$Sub_metering_1, type="l",
xlab="", ylab="Energy sub metering")
lines(feb_data$dateTime, feb_data$Sub_metering_2, col="red")
lines(feb_data$dateTime, feb_data$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","red","blue"), lty="solid", border="none")
# top right
plot(feb_data$dateTime, feb_data$Voltage, type="l", xlab="datetime", ylab="Voltage")
# bottom right
plot(feb_data$dateTime, feb_data$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
?legend
par(mfcol=c(2,2))
# top left
plot(feb_data$dateTime, feb_data$Global_active_power, type="l",
xlab="", ylab="Global Active Power (kilowatts)")
# bottom left
plot(feb_data$dateTime, feb_data$Sub_metering_1, type="l",
xlab="", ylab="Energy sub metering")
lines(feb_data$dateTime, feb_data$Sub_metering_2, col="red")
lines(feb_data$dateTime, feb_data$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","red","blue"),
lty="solid", bty="n", text.width=4)
# top right
plot(feb_data$dateTime, feb_data$Voltage, type="l", xlab="datetime", ylab="Voltage")
# bottom right
plot(feb_data$dateTime, feb_data$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","red","blue"),
lty="solid", bty="n")
load_data <- function(filename="household_power_consumption.txt"){
all_data <- read.table(filename, header=TRUE, sep=";")
all_data[,"dateTime"] <- as.POSIXct(paste(all_data$Date, all_data$Time), format="%d/%m/%Y %H:%M:%S")
feb_data <- subset(all_data, dateTime >= as.POSIXct("2007-02-01", format="%Y-%m-%d") & dateTime < as.POSIXct("2007-02-03", format="%Y-%m-%d"))
feb_data
}
feb_data$Global_active_power <- as.numeric(as.character(feb_data$Global_active_power))
feb_data$Sub_metering_1 <- as.numeric(as.character(feb_data$Sub_metering_1))
feb_data$Sub_metering_2 <- as.numeric(as.character(feb_data$Sub_metering_2))
feb_data$Sub_metering_3 <- as.numeric(as.character(feb_data$Sub_metering_3))
feb_data$Voltage <- as.numeric(as.character(feb_data$Voltage))
feb_data$Global_reactive_power <- as.numeric(as.character(feb_data$Global_reactive_power))
# png("plot4.png")
par(mfcol=c(2,2))
# top left
plot(feb_data$dateTime, feb_data$Global_active_power, type="l",
xlab="", ylab="Global Active Power (kilowatts)")
# bottom left
plot(feb_data$dateTime, feb_data$Sub_metering_1, type="l",
xlab="", ylab="Energy sub metering")
lines(feb_data$dateTime, feb_data$Sub_metering_2, col="red")
lines(feb_data$dateTime, feb_data$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","red","blue"),
lty="solid", bty="n")
# top right
plot(feb_data$dateTime, feb_data$Voltage, type="l", xlab="datetime", ylab="Voltage")
# bottom right
plot(feb_data$dateTime, feb_data$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
# dev.off()
load_data <- function(filename="household_power_consumption.txt"){
all_data <- read.table(filename, header=TRUE, sep=";")
all_data[,"dateTime"] <- as.POSIXct(paste(all_data$Date, all_data$Time), format="%d/%m/%Y %H:%M:%S")
feb_data <- subset(all_data, dateTime >= as.POSIXct("2007-02-01", format="%Y-%m-%d") & dateTime < as.POSIXct("2007-02-03", format="%Y-%m-%d"))
feb_data
}
feb_data$Global_active_power <- as.numeric(as.character(feb_data$Global_active_power))
feb_data$Sub_metering_1 <- as.numeric(as.character(feb_data$Sub_metering_1))
feb_data$Sub_metering_2 <- as.numeric(as.character(feb_data$Sub_metering_2))
feb_data$Sub_metering_3 <- as.numeric(as.character(feb_data$Sub_metering_3))
feb_data$Voltage <- as.numeric(as.character(feb_data$Voltage))
feb_data$Global_reactive_power <- as.numeric(as.character(feb_data$Global_reactive_power))
png("plot4.png")
par(mfcol=c(2,2))
# top left
plot(feb_data$dateTime, feb_data$Global_active_power, type="l",
xlab="", ylab="Global Active Power (kilowatts)")
# bottom left
plot(feb_data$dateTime, feb_data$Sub_metering_1, type="l",
xlab="", ylab="Energy sub metering")
lines(feb_data$dateTime, feb_data$Sub_metering_2, col="red")
lines(feb_data$dateTime, feb_data$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black","red","blue"),
lty="solid", bty="n")
# top right
plot(feb_data$dateTime, feb_data$Voltage, type="l", xlab="datetime", ylab="Voltage")
# bottom right
plot(feb_data$dateTime, feb_data$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
install.packages("ggplot2")
swirl
library(swirl)
swirl()
head(airquality)
xyplot(Ozone ~ Wind, data=airquality)
xyplot(Ozone ~ Wind, data=airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone ~ Wind, data=airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data=airquality, layout=c(5,1))
xyplot(Ozone ~ Wind | Month, data=airquality, layout=c(5,1))
p <- xyplot(Ozone~Wind, data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat | color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat | color*cut, data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
swirl()
library(swirl)
siwrl()
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
V[,1]
svd[,1]
svd$v[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,c(1,2)]
svd2$d
dim(faceData)
a1 <- 9
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- 8
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a <- 0
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,c(562,563)])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
mypclust(hclustering, lab.col=unclass(sub1$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,1:3])
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers=6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers=6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Walkdown Cluster")
rm(feb_data)
rm(load_data())
rm(load_data
)
rm(xlab)
setwd("Documents/coursera data science/reproducible research/course project 1/RepData_PeerAssessment1/")
dir()
frac_missing <- mean(is.na(all_data$steps))
library(dplyr)
all_data <- read.csv("activity.csv")
all_data$date <- as.Date(as.character(all_data$date), format="%Y-%m-%d")
steps_per_day <- all_data %>%
filter(!is.na(steps)) %>%
group_by(date) %>%
summarize(total_steps=sum(steps))
hist(steps_per_day$total_steps,
breaks=15,
main="Histogram of steps per day",
xlab="total steps")
mean_steps <- mean(steps_per_day$total_steps)
median_steps <- median(steps_per_day$total_steps)
steps_per_interval <- all_data %>%
filter(!is.na(steps)) %>%
group_by(interval) %>%
summarize(avg_steps=mean(steps))
plot(steps_per_interval$interval, steps_per_interval$avg_steps, type="l", xlab="interval", ylab="avg steps")
most_active_interval <- steps_per_interval[steps_per_interval$avg_steps==max(steps_per_interval$avg_steps),
"interval"]
frac_missing <- mean(is.na(all_data$steps))
most_active_interval
most_active_interval[[]]
[most_active_interval]
[[most_active_interval]]
most_active_interval[[1]]
interval=835
steps_per_interval[steps_per_interval$interval==interval,"avg_steps"][[1]]
test <- all_data %>%
mutate(steps = ifelse(is.na(steps),
steps_per_interval[steps_per_interval$interval==interval,"avg_steps"][[1]],
steps))
test <- all_data %>%
mutate(steps = ifelse(is.na(steps),
steps_per_interval["interval"==interval,"avg_steps"][[1]],
steps))
test <- all_data %>% group_by(interval) %>% mutate(steps = impute.mean(steps))
library(dplyr)
test <- all_data %>% group_by(interval) %>% mutate(steps = impute.mean(steps))
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
test <- all_data %>% group_by(interval) %>% mutate(steps = impute.mean(steps))
head(test)
mean(is.na(test$steps))
mean(subset(all_data, interval==5), na.rm = TRUE)
mean(subset(all_data, "interval"==5), na.rm = TRUE)
mean(subset(all_data, interval==5), na.rm = TRUE)$steps
subset(all_data, interval==5)
mean(subset(all_data, interval==5)$steps, na.rm=TRUE)
